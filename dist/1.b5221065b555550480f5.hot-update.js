webpackHotUpdate(1,{

/***/ 2674:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Visor; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_serializer__ = __webpack_require__(301);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_dom__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_bootstrap__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_canvas_VisorCanvas__ = __webpack_require__(1084);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_canvas_VisorContainedCanvas__ = __webpack_require__(1088);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_navigation_VisorSideNav__ = __webpack_require__(2675);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_navigation_VisorPlayer__ = __webpack_require__(2678);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_utils__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_score_GradeComponent__ = __webpack_require__(2684);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__locales_i18n__ = __webpack_require__(1061);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_typeface_ubuntu__ = __webpack_require__(2688);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_typeface_ubuntu___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_typeface_ubuntu__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_typeface_source_sans_pro__ = __webpack_require__(2705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_typeface_source_sans_pro___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_typeface_source_sans_pro__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__trendmicro_react_toggle_switch_dist_react_toggle_switch_css__ = __webpack_require__(585);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__trendmicro_react_toggle_switch_dist_react_toggle_switch_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13__trendmicro_react_toggle_switch_dist_react_toggle_switch_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__sass_style_scss__ = __webpack_require__(1157);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__sass_style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14__sass_style_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__core_visor_visorEntrypoint__ = __webpack_require__(2730);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif (global && !global._babelPolyfill) {\n  __webpack_require__(2734);\n}\n\n__webpack_require__(2053).polyfill();\n/**\n * Visor app main component\n */\n\n\nvar Visor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Visor, _Component);\n\n  function Visor(props) {\n    var _this;\n\n    _classCallCheck(this, Visor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Visor).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"setHoverClass\", function () {\n      _this.setState({\n        mouseOnPlayer: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteHoverClass\", function () {\n      _this.setState({\n        mouseOnPlayer: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onMouseMove\", function () {\n      if (!_this.state.mouseMoving) {\n        _this.setState({\n          mouseMoving: true\n        });\n      } else {\n        if (_this.timer) {\n          clearTimeout(_this.timer);\n        }\n\n        _this.timer = setTimeout(function () {\n          _this.setState({\n            mouseMoving: false\n          });\n        }, 2500);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMarkClicked\", function (id, value, stateElement) {\n      var richElementState = _this.state.richElementState;\n\n      var marks = _this.getAllMarks();\n\n      var triggered_event = {\n        id: id,\n        value: value,\n        stateElement: stateElement\n      };\n\n      var triggered_marks = _this.getTriggeredMarks(marks, triggered_event); // clearMark | If actual Triggered Mark have passed e.detail.value and actual value is different or actual element doesn't need to clear the value\n\n\n      triggered_marks = _this.clearTriggeredValues(triggered_event, triggered_marks); // Just try to trigger if mark exists\n\n      if (_this.containsMarkValue(marks, triggered_event.value)) {\n        // And is triggereable (not pending)\n        var isTriggerable = _this.isTriggereableMark(triggered_event, triggered_marks);\n\n        if (isTriggerable) {\n          triggered_marks = _this.putMarksOnHold(triggered_marks, triggered_event); // If mark is storable (if make any sense to store to render something different like a video) do it, else don't\n\n          if (triggered_event.stateElement) {\n            if (_this.isNotInStateElement(triggered_event, _this.state.richElementState)) {\n              var new_mark = {};\n              new_mark[triggered_event.id] = triggered_event.value;\n\n              _this.setState({\n                triggeredMarks: triggered_marks,\n                richElementState: Object.assign({}, richElementState, new_mark)\n              });\n            }\n          } else {\n            triggered_marks.forEach(function (mark, index) {\n              if (mark.id === isTriggerable.id) {\n                triggered_marks[index] = isTriggerable;\n              }\n            });\n\n            _this.setState({\n              triggeredMarks: triggered_marks\n            });\n          }\n        }\n      } else if (triggered_event.stateElement) {\n        var backupElementStates = _this.state.backupElementStates;\n        var _new_mark = {};\n        _new_mark[triggered_event.id] = triggered_event.value;\n\n        _this.setState({\n          backupElementStates: Object.assign({}, backupElementStates, _new_mark)\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeLastView\", function () {\n      var newViews = _this.state.currentView.slice(0, -1);\n\n      if (newViews.length > 0) {\n        var lastView = newViews[newViews.length - 1];\n\n        if (lastView.indexOf(\"cv-\") === -1) {\n          _this.setState({\n            containedViewSelected: 0\n          });\n        }\n      }\n\n      _this.setState({\n        currentView: newViews,\n        triggeredMarks: _this.unTriggerLastMark(_this.state.triggeredMarks),\n        richElementState: _this.getActualBoxesStates(_this.state.backupElementStates, _this.state.richElementState)\n      });\n    });\n\n    var initialView = _this.getCurrentView(Ediphy.State.navItemSelected, Ediphy.State.containedViewSelected);\n\n    if (!Ediphy.State.preview) {\n      var remainingViews = Ediphy.State.navItemsIds.filter(function (n) {\n        var nav = Ediphy.State.navItemsById[n];\n        var returnIt = Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"J\" /* isSection */])(nav.id) ? Ediphy.Config.sections_have_content : true;\n        returnIt = returnIt && !nav.hidden;\n        return returnIt ? nav.id : null;\n      });\n\n      if (remainingViews.length > 0) {\n        initialView = remainingViews[0];\n      }\n    }\n\n    _this.timer = false;\n    _this.state = {\n      currentView: [initialView],\n\n      /* This is the actual view rendering*/\n      triggeredMarks: [],\n      showpop: false,\n      richElementState: {},\n      backupElementStates: {},\n      toggledSidebar: false,\n      // Ediphy.State.globalConfig.visorNav.sidebar ? Ediphy.State.globalConfig.visorNav.sidebar : (Ediphy.State.globalConfig.visorNav.sidebar === undefined),\n      fromScorm: Ediphy.State.fromScorm,\n      scoreInfo: {\n        userName: \"Anonymous\",\n        totalScore: 0,\n        totalWeight: 0,\n        completionProgress: 0\n      },\n      mouseMoving: false,\n      mouseOnPlayer: false,\n      backwards: false\n    };\n\n    if (!Ediphy.State[\"export\"]) {\n      window[\"export\"] = function () {\n        var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'HTML';\n\n        switch (format) {\n          case 'SCORM12':\n            _this.exportToScorm(false, function () {\n              return true;\n            }, false);\n\n            return true;\n\n          case 'SCORM2004':\n            _this.exportToScorm(true, function () {\n              return true;\n            }, false);\n\n            return true;\n\n          case 'HTML':\n            _this.exportToScorm('HTML', function () {\n              return true;\n            }, false);\n\n            return true;\n\n          default:\n            return false;\n        }\n      };\n    }\n\n    fetch(Ediphy.Config.theme_css_url) // Webpack output CSS\n    .then(function (res) {\n      if (!res.ok) {\n        throw new Error('Error');\n      }\n\n      return res.text();\n    }).then(function (data) {\n      window.theme_css = data;\n    })[\"catch\"](function () {\n      return '';\n    });\n    return _this;\n  }\n\n  _createClass(Visor, [{\n    key: \"UNSAFE_componentWillUpdate\",\n    value: function UNSAFE_componentWillUpdate(nextProps, nextState) {\n      var _this2 = this;\n\n      // reset marks when navigating between main sections\n      if (this.state.currentView.length !== nextState.currentView.length && Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"P\" /* isView */])(nextState.currentView[nextState.currentView.length - 1])) {\n        this.setState({\n          triggeredMarks: []\n        });\n      }\n\n      if (this.state.currentView.length > 1 && this.state.currentView.filter(function (i) {\n        return i.indexOf(\"pa-\") !== -1;\n      }).length > 1) {\n        this.setState({\n          currentView: [this.state.currentView[this.state.currentView.length - 1]]\n        });\n      } // Mark triggering mechanism\n\n\n      if (nextState.triggeredMarks.length !== 0 && this.returnTriggereableMark(nextState.triggeredMarks)) {\n        var newMark = this.returnTriggereableMark(nextState.triggeredMarks);\n        nextState.triggeredMarks.forEach(function (mark) {\n          if (newMark.id === mark.id) {\n            mark.currentState = 'TRIGGERED';\n            mark.viewOrigin = _this2.state.currentView[_this2.state.currentView.length - 1];\n          }\n\n          return mark;\n        }); // New or existing mark\n\n        if (newMark.connectMode === 'new' || newMark.connectMode === \"existing\") {\n          var array_trigger_mark = this.santinizeViewsArray(nextState.triggeredMarks, nextState.currentView.concat([newMark.connection]));\n          var newcv = array_trigger_mark.length > 0 && array_trigger_mark[array_trigger_mark.length - 1] && Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"D\" /* isContainedView */])(array_trigger_mark[array_trigger_mark.length - 1]) ? array_trigger_mark[array_trigger_mark.length - 1] : 0;\n          this.setState({\n            containedViewSelected: newcv,\n            currentView: array_trigger_mark,\n            triggeredMarks: nextState.triggeredMarks\n          }); // External target\n        } else if (newMark.connectMode === \"external\") {\n          var win = window.open(newMark.connection, '_blank');\n          win.focus();\n          var shiftExternal = nextState.triggeredMarks;\n          shiftExternal.shift();\n          this.setState({\n            triggeredMarks: shiftExternal\n          });\n        } else if (newMark.connectMode === \"popup\") {\n          var shiftPop = nextState.triggeredMarks;\n          shiftPop.shift();\n          var markpop = document.getElementById('mark-' + newMark.id);\n\n          if (markpop) {\n            markpop.click();\n          }\n\n          this.setState({\n            showpop: !this.state.showpop,\n            triggeredMarks: shiftPop\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*\n      * Add Key bindings to app\n      * */\n      if (Ediphy.State.globalConfig.visorNav.keyBindings) {\n        // First get window focus so arrows work right away\n        window.focus();\n\n        window.onkeyup = function (e) {\n          var key = e.keyCode ? e.keyCode : e.which;\n          var navItemsIds = Ediphy.State.navItemsIds;\n          var navItems = Ediphy.State.navItemsById;\n\n          if (!Ediphy.Config.sections_have_content) {\n            navItemsIds = navItemsIds.filter(function (element) {\n              return element.indexOf(\"se\") === -1;\n            });\n          }\n\n          navItemsIds = navItemsIds.filter(function (nav) {\n            return !navItems[nav].hidden;\n          });\n          var navItemSelected = this.state.currentView.reduce(function (element) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"I\" /* isPage */])(element)) {\n              return element;\n            }\n\n            return null;\n          });\n          var index = navItemsIds.indexOf(navItemSelected);\n          var maxIndex = navItemsIds.length;\n          var focusElement = document.activeElement.tagName.toLowerCase();\n\n          if (focusElement !== 'input' && focusElement !== 'textarea') {\n            if (key === 37 || key === 33) {\n              this.changeCurrentView(navItemsIds[Math.max(index - 1, 0)], true);\n            } else if (key === 39 || key === 34) {\n              this.changeCurrentView(navItemsIds[Math.min(index + 1, maxIndex - 1)]);\n            }\n          }\n        }.bind(this);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (window.State) {\n        Ediphy.State = Object(__WEBPACK_IMPORTED_MODULE_0__reducers_serializer__[\"c\" /* serialize */])({\n          \"present\": _objectSpread({}, window.State)\n        }).present;\n      }\n\n      var _Ediphy$State = Ediphy.State,\n          navItemsIds = _Ediphy$State.navItemsIds,\n          globalConfig = _Ediphy$State.globalConfig,\n          _Ediphy$State$styleCo = _Ediphy$State.styleConfig,\n          styleConfig = _Ediphy$State$styleCo === void 0 ? {} : _Ediphy$State$styleCo,\n          containedViewsById = _Ediphy$State.containedViewsById,\n          boxesById = _Ediphy$State.boxesById,\n          marksById = _Ediphy$State.marksById,\n          navItemsById = _Ediphy$State.navItemsById,\n          viewToolbarsById = _Ediphy$State.viewToolbarsById,\n          pluginToolbarsById = _Ediphy$State.pluginToolbarsById;\n      var ediphy_document_id = Ediphy.State.id;\n      var ediphy_platform = Ediphy.State.platform;\n      var exercises = {};\n      Object.keys(Ediphy.State.exercises).map(function (exercise) {\n        if (containedViewsById[exercise] || navItemsById[exercise] && !navItemsById[exercise].hidden) {\n          exercises[exercise] = Ediphy.State.exercises[exercise];\n        }\n      });\n      var title = globalConfig.title;\n      var ratio = globalConfig.canvasRatio;\n      var visorNav = globalConfig.visorNav;\n      var wrapperClasses = this.state.toggledSidebar ? \"visorwrapper toggled\" : \"visorwrapper\";\n      var toggleIcon = this.state.toggledSidebar ? \"keyboard_arrow_left\" : \"keyboard_arrow_right\";\n      var toggleColor = this.state.toggledSidebar ? \"toggleColor\" : \"\";\n      var isCV = Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"D\" /* isContainedView */])(this.state.currentView);\n      var isSlide = isCV && containedViewsById[this.getLastCurrentViewElement()] === \"slide\" || !isCV && navItemsById[this.getLastCurrentViewElement()] === \"slide\" ? \"pcw_slide\" : \"pcw_doc\";\n      var vishPlayer = globalConfig.visorNav && globalConfig.visorNav.fixedPlayer !== undefined ? globalConfig.visorNav.fixedPlayer : true;\n      var currentView = this.getLastCurrentViewElement();\n      var canvasProps = {\n        boxes: boxesById,\n        changeCurrentView: function changeCurrentView(element) {\n          _this3.changeCurrentView(element);\n        },\n        canvasRatio: ratio,\n        containedViews: containedViewsById,\n        currentView: currentView,\n        fromScorm: this.state.fromScorm,\n        navItems: navItemsById,\n        navItemsIds: navItemsIds,\n        removeLastView: this.removeLastView,\n        richElementState: this.state.richElementState,\n        title: title,\n        marks: marksById,\n        viewToolbars: viewToolbarsById,\n        pluginToolbars: pluginToolbarsById,\n        onMarkClicked: this.onMarkClicked,\n        triggeredMarks: this.state.triggeredMarks,\n        viewsArray: this.state.currentView,\n        exportModalOpen: false,\n        ediphy_document_id: ediphy_document_id,\n        ediphy_platform: ediphy_platform,\n        exercises: exercises,\n        styleConfig: styleConfig\n      };\n      var navItemComponents = Object.keys(navItemsById).filter(function (nav) {\n        return Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"I\" /* isPage */])(nav);\n      }).map(function (nav, i) {\n        return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_canvas_VisorCanvas__[\"a\" /* default */], _extends({\n          key: i\n        }, canvasProps, {\n          selectedView: currentView,\n          backwards: _this3.state.backwards,\n          currentView: nav,\n          show: nav === currentView,\n          z: i + 10,\n          showCanvas: nav.indexOf(\"cv-\") === -1\n        }));\n      });\n      var cvComponents = Object.keys(containedViewsById).map(function (nav, i) {\n        return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_canvas_VisorContainedCanvas__[\"a\" /* default */], _extends({\n          key: i\n        }, canvasProps, {\n          currentView: nav,\n          show: nav === currentView,\n          z: i + navItemComponents.length,\n          showCanvas: nav.indexOf(\"cv-\") !== -1\n        }));\n      });\n      var content = [].concat(_toConsumableArray(navItemComponents), [cvComponents]);\n      var empty = __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\", {\n        className: \"emptyPresentation\"\n      }, __WEBPACK_IMPORTED_MODULE_10__locales_i18n__[\"a\" /* default */].t(\"EmptyPresentation\"));\n      var visorNavButtonClass = 'hoverPlayerSelector';\n      visorNavButtonClass = this.state.mouseMoving ? visorNavButtonClass + ' appearButton' : visorNavButtonClass + ' fadeButton';\n      visorNavButtonClass = this.state.mouseOnPlayer ? visorNavButtonClass + ' hoverPlayerOn' : visorNavButtonClass;\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\", {\n        id: \"app\",\n        ref: 'app',\n        className: wrapperClasses,\n        onMouseMove: this._onMouseMove\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_navigation_VisorSideNav__[\"a\" /* default */], {\n        changeCurrentView: function changeCurrentView(page) {\n          _this3.changeCurrentView(page);\n        },\n        courseTitle: title,\n        show: visorNav.sidebar,\n        showScore: !globalConfig.hideGlobalScore,\n        currentViews: this.state.currentView,\n        navItemsById: navItemsById,\n        navItemsIds: navItemsIds.filter(function (nav) {\n          return !navItemsById[nav].hidden;\n        }),\n        viewToolbars: viewToolbarsById,\n        scoreInfo: this.state.scoreInfo,\n        exercises: exercises,\n        toggled: this.state.toggledSidebar\n      }), __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\", {\n        id: \"page-content-wrapper\",\n        className: isSlide + \" page-content-wrapper\",\n        style: {\n          height: '100%'\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"l\" /* Grid */], {\n        fluid: true,\n        id: \"visorAppContent\",\n        style: {\n          height: '100%'\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"y\" /* Row */], {\n        style: {\n          height: vishPlayer ? 'calc(100% - 38px)' : '100%'\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"e\" /* Col */], {\n        lg: 12,\n        style: {\n          height: '100%',\n          paddingLeft: '0px',\n          paddingRight: '0px'\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__components_score_GradeComponent__[\"a\" /* default */], {\n        fadePlayerClass: visorNavButtonClass,\n        setHover: this.setHoverClass,\n        deleteHover: this.deleteHoverClass,\n        updateScore: function updateScore(scoreInfo) {\n          _this3.setState({\n            scoreInfo: scoreInfo\n          });\n        },\n        navItemsIds: navItemsIds.filter(function (nav) {\n          return !navItemsById[nav].hidden;\n        }),\n        containedViews: containedViewsById,\n        currentView: currentView,\n        navItemsById: navItemsById,\n        globalConfig: globalConfig,\n        styleConfig: styleConfig,\n        exercises: exercises,\n        pluginToolbars: pluginToolbarsById,\n        fromScorm: this.state.fromScorm,\n        changeCurrentView: function changeCurrentView(el) {\n          _this3.changeCurrentView(el);\n        }\n      }, currentView ? content : empty), !vishPlayer ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_navigation_VisorPlayer__[\"a\" /* default */], {\n        fadePlayerClass: visorNavButtonClass,\n        setHover: this.setHoverClass,\n        deleteHover: this.deleteHoverClass,\n        show: visorNav.player,\n        changeCurrentView: function changeCurrentView(page, backwards) {\n          _this3.changeCurrentView(page, backwards);\n        },\n        currentViews: this.state.currentView,\n        navItemsById: navItemsById,\n        navItemsIds: navItemsIds.filter(function (nav) {\n          return !navItemsById[nav].hidden;\n        })\n      }) : null, visorNav.sidebar ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\", {\n        className: \"visorNavButtonDiv\",\n        onMouseEnter: function onMouseEnter() {\n          return _this3.setHoverClass();\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this3.deleteHoverClass();\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"c\" /* Button */], {\n        id: \"visorNavButton\",\n        className: toggleColor + visorNavButtonClass,\n        bsStyle: \"primary\",\n        onClick: function onClick() {\n          _this3.setState({\n            toggledSidebar: !_this3.state.toggledSidebar\n          });\n\n          document.activeElement.blur();\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"i\", {\n        className: \"material-icons\"\n      }, toggleIcon))) : null)), __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"y\" /* Row */], {\n        style: {\n          height: '38px',\n          display: vishPlayer ? 'block' : 'none'\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"e\" /* Col */], {\n        lg: 12,\n        style: {\n          height: '100%',\n          paddingLeft: '0px',\n          paddingRight: '0px'\n        }\n      }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_navigation_VisorPlayer__[\"a\" /* default */], {\n        fadePlayerClass: \"appearButton\",\n        setHover: this.setHoverClass,\n        deleteHover: this.deleteHoverClass,\n        show: visorNav.player,\n        changeCurrentView: function changeCurrentView(page, backwards) {\n          _this3.changeCurrentView(page, backwards);\n        },\n        currentViews: this.state.currentView,\n        navItemsById: navItemsById,\n        navItemsIds: navItemsIds.filter(function (nav) {\n          return !navItemsById[nav].hidden;\n        })\n      }))))));\n    }\n    /**\n     * Export to HTML or PDF\n     * @param format\n     * @param callback\n     * @param options\n     */\n\n  }, {\n    key: \"export\",\n    value: function _export(format, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (format === \"PDF\") {\n        printToPDF(Ediphy.State, callback, options);\n      } else {\n        Ediphy.Visor.exportsHTML(Ediphy.State, callback, options);\n      }\n    }\n  }, {\n    key: \"exportToScorm\",\n    value: function exportToScorm(is2004, callback) {\n      var selfContained = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      Ediphy.Visor.exportScorm(Ediphy.State, is2004, callback, selfContained);\n    }\n    /**\n     * Get actualView REFACTOR: change name\n     * @returns {String} currentView\n     */\n\n  }, {\n    key: \"getLastCurrentViewElement\",\n    value: function getLastCurrentViewElement() {\n      return this.state.currentView[this.state.currentView.length - 1];\n    }\n    /**\n     * Navigation main method\n     * @param {string} element - current Element to go\n     */\n\n  }, {\n    key: \"changeCurrentView\",\n    value: function changeCurrentView(element) {\n      var backwards = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"D\" /* isContainedView */])(element)) {\n        this.setState({\n          currentView: [this.getCurrentView(this.state.navItemSelected, this.state.containedViewSelected), element],\n          backwards: backwards\n        });\n      } else {\n        this.setState({\n          currentView: [element],\n          backwards: backwards\n        });\n\n        if (this.state.currentView.length > 1) {\n          this.setState({\n            triggeredMarks: this.unTriggerLastMark(this.state.triggeredMarks),\n            richElementState: this.getActualBoxesStates(this.state.backupElementStates, this.state.richElementState),\n            backwards: backwards\n          });\n        }\n      }\n    }\n    /**\n     * This is used to get initial view and make sure is either containedView or NavItem\n     * @param NIselected\n     * @param CVselected\n     */\n\n  }, {\n    key: \"getCurrentView\",\n    value: function getCurrentView(NIselected, CVselected) {\n      var navItemSelected = 0;\n\n      if (Ediphy.State.navItemsById[NIselected] && !Ediphy.State.navItemsById[NIselected].hidden) {\n        navItemSelected = NIselected;\n      }\n\n      return CVselected === 0 ? navItemSelected : CVselected;\n    }\n    /* Marks functions*/\n\n    /**\n     * Make sure if mark value exists\n     * @return {boolean} -  whether the mark exists or not in the array\n     * @param marks\n     * @param mark_value\n     */\n\n  }, {\n    key: \"containsMarkValue\",\n    value: function containsMarkValue(marks, mark_value) {\n      var exists = false;\n      marks.forEach(function (mark_element) {\n        if (mark_element.value === mark_value) {\n          exists = true;\n        }\n      });\n      return exists;\n    }\n  }, {\n    key: \"returnTriggereableMark\",\n\n    /**\n     * Returns if any is there any triggerable mark\n     * @param triggeredMarks\n     * @returns Object Marks that are triggered\n     */\n    value: function returnTriggereableMark(triggeredMarks) {\n      var isAnyTriggereableMark = false;\n      var canBeTriggered = true;\n\n      if (Array.isArray(triggeredMarks)) {\n        triggeredMarks.forEach(function (mark) {\n          if (mark.currentState === 'TRIGGERED') {\n            canBeTriggered = false;\n          }\n\n          if (canBeTriggered && mark.currentState === 'PENDING' && !isAnyTriggereableMark) {\n            isAnyTriggereableMark = mark;\n          }\n        });\n      }\n\n      return isAnyTriggereableMark;\n    }\n    /**\n     * Whether if the mark is triggereable or not\n     * @param mark\n     * @param triggerable_marks\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isTriggereableMark\",\n    value: function isTriggereableMark(mark, triggerable_marks) {\n      var isAnyTriggereableMark = false;\n      triggerable_marks.forEach(function (triggereable_mark) {\n        if (triggereable_mark.currentState === 'PENDING' && triggereable_mark.value === mark.value && triggereable_mark.origin === mark.id) {\n          if (!isAnyTriggereableMark) {\n            isAnyTriggereableMark = triggereable_mark;\n          }\n        }\n\n        if (!mark.stateElement && triggereable_mark.value === mark.value && triggereable_mark.origin === mark.id) {\n          if (!isAnyTriggereableMark) {\n            isAnyTriggereableMark = triggereable_mark;\n            isAnyTriggereableMark.currentState = \"PENDING\";\n          }\n        }\n      });\n      return isAnyTriggereableMark;\n    }\n    /**\n     * Change state of last mark triggered to done, this is used to go back\n     * @param state\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"unTriggerLastMark\",\n    value: function unTriggerLastMark(state) {\n      var new_array = state;\n      new_array.forEach(function (mark) {\n        if (mark.currentState === 'TRIGGERED') {\n          mark.currentState = 'DONE';\n        }\n      });\n      return new_array;\n    }\n    /**\n     * Cleans Views Array\n     * @param triggeredMarks\n     * @param arrayViews\n     * @returns {*}\n     */\n\n  }, {\n    key: \"santinizeViewsArray\",\n    value: function santinizeViewsArray(triggeredMarks, arrayViews) {\n      var final_array = arrayViews;\n      triggeredMarks.forEach(function (mark) {\n        if (mark.currentState === \"DONE\" && final_array.indexOf(mark.connection) !== -1) {\n          final_array.splice(final_array.indexOf(mark.connection), 1);\n        }\n      });\n      final_array = final_array.reverse().filter(function (v, i, a) {\n        return a.indexOf(v) === i || v.indexOf(\"pa-\") === -1;\n      }).reverse();\n      return final_array;\n    }\n    /**\n     * Cleans used 'DONE' values in triggeredMarks array\n     * @param triggered_event\n     * @param triggeredMarks\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"clearTriggeredValues\",\n    value: function clearTriggeredValues(triggered_event, triggeredMarks) {\n      var clean_array = [];\n\n      if (triggeredMarks.length > 0) {\n        if (!triggered_event.stateElement) {\n          triggeredMarks.forEach(function (element) {\n            if (element.currentState !== 'DONE' || triggered_event.id !== element.origin) {\n              clean_array.push(element);\n            }\n          });\n        } else {\n          triggeredMarks.forEach(function (element) {\n            if (element.currentState !== \"DONE\" || element.value === triggered_event.value || element.origin !== triggered_event.id) {\n              clean_array.push(element);\n            }\n          });\n        }\n      }\n\n      return clean_array;\n    }\n    /**\n     * Provisional Method TODO: Verify if needed\n     * @param triggered_event\n     * @param richStateselement\n     */\n    // clearStateElements(triggered_event, richStateselement) {\n    //     if(richStateselement[triggered_event.id] !== undefined && parseFloat(triggered_event.value) > parseFloat(richStateselement[triggered_event.id]) + 1) {\n    //         let newElementState = JSON.parse(JSON.stringify(richStateselement));\n    //         newElementState[triggered_event.id] = undefined;\n    //         return newElementState;\n    //     }\n    //\n    //     return richStateselement;\n    // }\n\n    /**\n     * Get all marks triggered in the same event\n     * @param marks\n     * @param triggered_event\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getTriggeredMarks\",\n    value: function getTriggeredMarks(marks, triggered_event) {\n      var _this4 = this;\n\n      var state_marks = [];\n      var previously_triggered_marks = this.state.triggeredMarks;\n\n      if (previously_triggered_marks.length === 0) {\n        marks.forEach(function (mark_element) {\n          if (mark_element.value === triggered_event.value && mark_element.origin === triggered_event.id) {\n            state_marks.push({\n              currentState: \"PENDING\",\n              viewOrigin: _this4.state.currentView[_this4.state.currentView.length - 1],\n              id: mark_element.id,\n              value: mark_element.value,\n              connection: mark_element.connection,\n              origin: mark_element.origin,\n              connectMode: mark_element.connectMode\n            });\n          }\n        });\n      } else {\n        // return only triggered MARKS\n        state_marks = state_marks.concat(previously_triggered_marks);\n        marks.forEach(function (triggered_mark) {\n          var is_different = true;\n\n          for (var n in state_marks) {\n            if (state_marks[n].value === triggered_mark.value && state_marks[n].origin === triggered_event.id) {\n              is_different = false;\n            }\n          }\n\n          if (is_different && triggered_event.value === triggered_mark.value && triggered_event.id === triggered_mark.origin) {\n            state_marks.push({\n              currentState: \"PENDING\",\n              viewOrigin: _this4.state.currentView[_this4.state.currentView.length - 1],\n              id: triggered_mark.id,\n              value: triggered_mark.value,\n              connection: triggered_mark.connection,\n              origin: triggered_mark.origin,\n              connectMode: triggered_mark.connectMode\n            });\n          }\n        });\n      }\n\n      return state_marks;\n    }\n    /**\n     * Get all Mark of currentView\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getAllMarks\",\n    value: function getAllMarks() {\n      var currentView = this.state.currentView[this.state.currentView.length - 1];\n      var boxes = this.getAllRichDescendantBoxes(currentView);\n      var marks = [];\n      Object.keys(Ediphy.State.marksById).forEach(function (mark) {\n        boxes.includes(Ediphy.State.marksById[mark].origin);\n        marks.push(Ediphy.State.marksById[mark]);\n      });\n      return marks;\n    }\n  }, {\n    key: \"putMarksOnHold\",\n    value: function putMarksOnHold(triggered_marks) {\n      var anyTriggeredMarks = false;\n      var anyPendingMarks = false;\n      triggered_marks.forEach(function (t_mark) {\n        if (t_mark.currentState === \"PENDING\") {\n          anyPendingMarks = true;\n        }\n\n        if (t_mark.currentState === \"TRIGGERED\") {\n          anyTriggeredMarks = true;\n        }\n      });\n      var origin_marks = [];\n      var markUntriggered = false;\n\n      if (anyTriggeredMarks && anyPendingMarks) {\n        triggered_marks.forEach(function (t_mark) {\n          if (t_mark.viewOrigin !== undefined && t_mark.currentState === 'HOLD') {\n            origin_marks.push(t_mark.viewOrigin);\n          }\n\n          if (t_mark.currentState === 'TRIGGERED' && t_mark.viewOrigin !== undefined && origin_marks.indexOf(t_mark.viewOrigin) === -1) {\n            origin_marks.push(t_mark.viewOrigin);\n          }\n        });\n        triggered_marks.forEach(function (t_mark) {\n          if (t_mark.currentState === 'PENDING' && t_mark.viewOrigin !== undefined && origin_marks.indexOf(t_mark.viewOrigin) === -1) {\n            markUntriggered = true;\n          }\n        });\n\n        if (markUntriggered) {\n          var newMarksArray = [];\n          triggered_marks.forEach(function (t_mark) {\n            if (t_mark.currentState === 'TRIGGERED') {\n              t_mark.currentState = 'HOLD';\n            }\n\n            newMarksArray.push(t_mark);\n          });\n          return newMarksArray;\n        }\n\n        return triggered_marks;\n      }\n\n      return triggered_marks;\n    }\n    /**\n     * @param navItemID\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getAllRichDescendantBoxes\",\n    value: function getAllRichDescendantBoxes(navItemID) {\n      var view = Ediphy.State.navItemsById[navItemID];\n\n      if (Object(__WEBPACK_IMPORTED_MODULE_8__common_utils__[\"D\" /* isContainedView */])(navItemID)) {\n        view = Ediphy.State.containedViewsById[navItemID];\n      }\n\n      var boxes = view.boxes;\n      var newBoxes = [];\n      var richBoxes = [];\n      Object.keys(Ediphy.State.boxesById).map(function (box) {\n        if (boxes.indexOf(box) !== -1) {\n          newBoxes.push(box);\n\n          if (Object.keys(Ediphy.State.boxesById[box].children).length !== 0) {\n            Object.keys(Ediphy.State.boxesById[box].sortableContainers).map(function (second_box) {\n              newBoxes = newBoxes.concat(Ediphy.State.boxesById[box].sortableContainers[second_box].children);\n            });\n          }\n        }\n      });\n      newBoxes.forEach(function (_final) {\n        if (Ediphy.State.pluginToolbarsById[_final] && Ediphy.State.pluginToolbarsById[_final].pluginId && Ediphy.State.pluginToolbarsById[_final].pluginId !== \"sortable_container\" && Ediphy.Visor.Plugins[Ediphy.State.pluginToolbarsById[_final].pluginId].getConfig().isRich) {\n          richBoxes.push(_final);\n        }\n      });\n      return richBoxes;\n    }\n    /**\n     * Get the current state for selected box\n     * @param backup\n     * @param current\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getActualBoxesStates\",\n    value: function getActualBoxesStates(backup, current) {\n      var nextState = backup;\n      nextState[this.state.triggeredMarks[0].origin] = current[this.state.triggeredMarks[0].origin];\n      return nextState;\n    }\n    /**\n     * Detects if element is not already in state Element so its already triggered\n     * @param triggered_event\n     * @param richElementState\n     *\n     */\n\n  }, {\n    key: \"isNotInStateElement\",\n    value: function isNotInStateElement(triggered_event, richElementState) {\n      if (richElementState[triggered_event.id] === triggered_event.value) {\n        // return false\n        return true;\n      }\n\n      return true;\n    }\n    /**\n     * Remove last view from queue of views\n     */\n\n  }]);\n\n  return Visor;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\n\n__WEBPACK_IMPORTED_MODULE_2_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Visor, null), document.getElementById('root'));\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(13)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2674\n");

/***/ })

})